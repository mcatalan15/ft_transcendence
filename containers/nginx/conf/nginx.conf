events {
    worker_connections 768;
}

http {

	limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    client_max_body_size 4M;

    server {
        listen 443 ssl;
        server_name localhost;
        
        ssl_certificate /etc/letsencrypt/live/mrlouf.studio/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mrlouf.studio/privkey.pem;

		add_header X-Frame-Options "SAMEORIGIN" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Permissions-Policy "geolocation=(),midi=(),sync-xhr=(),microphone=(),camera=(),magnetometer=(),gyroscope=(),fullscreen=(self),payment=()" always;
        # Deprecated header for Firefox compatibility:
        add_header Feature-Policy "geolocation 'none'; midi 'none'; sync-xhr 'none'; microphone 'none'; camera 'none'; magnetometer 'none'; gyroscope 'none'; fullscreen 'self'; payment 'none'" always;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        location /adminer/ {
            allow 192.168.1.0/24;
            deny all;
            proxy_pass http://adminer:1090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /prometheus/ {
            allow 192.168.1.0/24;
            deny all;
            proxy_pass http://prometheus:9090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /grafana/ {
            allow 192.168.1.0/24;
            deny all;
            proxy_pass http://grafana:3001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

		location /api/ {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://backend:3100/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

		location /ws {
			proxy_pass http://backend:3100/ws;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-Host $host;
			
			# WebSocket specific settings
			proxy_cache_bypass $http_upgrade;
			proxy_read_timeout 86400;
			proxy_send_timeout 86400;
		}

        location ~ ^/\.[^/]+ {
            deny all;
            return 403;
        }

        location ~* (\.env|\.git|\.htaccess|config\.env) {
            deny all;
            return 403;
        }

		# FRONTEND CATCH-ALL - MUST BE LAST
        location / {
            proxy_pass http://frontend:5173/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
		}
    }
}